@model hr1.humanResources.Employee

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Employee</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="EmpId" />
            <div class="form-group">
                <label asp-for="EmployeeName" class="control-label"></label>
                <input asp-for="EmployeeName" class="form-control" />
                <span asp-validation-for="EmployeeName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sex" class="control-label"></label>
                <input asp-for="Sex" class="form-control" />
                <span asp-validation-for="Sex" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MaritalStatus" class="control-label"></label>
                @Html.DropDownListFor(model => model.MaritalStatusId, (SelectList)ViewData["MaritalStatus"], new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaritalStatusId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label asp-for="Dept" class="control-label"></label>
                @Html.DropDownListFor(model => model.DeptId, (SelectList)ViewData["Departments"], new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DeptId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label asp-for="Position" class="control-label"></label>
                @Html.DropDownListFor(model => model.PositionId, (SelectList)ViewData["Position"], new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label asp-for="PerfScore" class="control-label"></label>
                @Html.DropDownListFor(model => model.PerfScoreId, (SelectList)ViewData["Performance"], new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PerfScoreId, "", new { @class = "text-danger" })
                <div class="form-group">
                    <label asp-for="EmpStatus" class="control-label"></label>
                    @Html.DropDownListFor(model => model.EmpStatusId, (SelectList)ViewData["EmployeeStatus"], new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EmpStatusId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="Absences" class="control-label"></label>
                    <input asp-for="Absences" class="form-control" />
                    <span asp-validation-for="Absences" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Salary" class="control-label"></label>
                    <input asp-for="Salary" class="form-control" />
                    <span asp-validation-for="Salary" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Edit" class="btn btn-primary" />
                </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
